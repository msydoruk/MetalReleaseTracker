#version: '3.8'

services:
  metalreleasetracker.backgroundservices:
    image: metalreleasetrackerbackgroundservices
    build:
      context: .
      dockerfile: MetalReleaseTracker.BackgroundServices/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      DOTNET_RUNNING_IN_CONTAINER: "true"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "true"
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - postgresMain
      - postgresBackground
      - seqBackground  

  metalreleasetracker.api:
    image: metalreleasetrackerapi
    build:
      context: .
      dockerfile: MetalReleaseTracker.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      DOTNET_RUNNING_IN_CONTAINER: "true"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "true"
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - postgresMain
      - seqMain

  postgresMain:
    image: postgres:16
    environment:
      POSTGRES_DB: MetalReleaseTrackerDb
      POSTGRES_USER: metal
      POSTGRES_PASSWORD: Mtl_pswrdSl
    ports:
      - "5433:5432"
    volumes:
      - postgres-main-data:/var/lib/postgresql/data
    networks:
      - app-network

  postgresBackground:
    image: postgres:16
    environment:
      POSTGRES_DB: BackgroundServicesDb
      POSTGRES_USER: metalUser
      POSTGRES_PASSWORD: Mtl_EApswrd
    ports:
      - "5434:5432"
    volumes:
      - postgres-background-data:/var/lib/postgresql/data 
    networks:
      - app-network

  seqMain:
    image: datalust/seq:latest
    environment:
      ACCEPT_EULA: Y
    ports:
      - "5341:80"
    networks:
      - app-network
    restart: unless-stopped

  seqBackground:
    image: datalust/seq:latest
    environment:
      ACCEPT_EULA: Y
    ports:
      - "5342:80"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-main-data:
  postgres-background-data:
